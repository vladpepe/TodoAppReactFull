{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todos","setTodos","inputText","setInputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","el","filter","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.083fb286.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Form = ({todos, setTodos,inputText,setInputText,setStatus}) => {\r\n\r\n    const inputTextHandler = (e) =>{\r\n        setInputText(e.target.value) \r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        if(inputText !== \"\"){\r\n              setTodos([\r\n            ...todos,{text: inputText, completed: false, id: Math.random()*1000}\r\n        ]);\r\n        }\r\n        setInputText('');\r\n    };\r\n\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return(\r\n    <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({todo,todos, setTodos}) =>{\r\n    const deleteHandler = (e) =>{\r\n         setTodos(todos.filter(el => el.id !== todo.id))\r\n    };\r\n\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map((el) => {\r\n            if(el.id === todo.id){\r\n            return{\r\n                ...el, completed : !el.completed\r\n            };\r\n            }\r\n            return el;\r\n         }));\r\n        \r\n   };\r\n    \r\n    \r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{todo.text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\" ><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"complete-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\"\r\n\r\nconst TodoList = ({todos,setTodos,filteredTodos}) =>{\r\n\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map((todo) => \r\n                (<Todo todo={todo} todos={todos} setTodos={setTodos}/>\r\n                ))}\r\n                \r\n            </ul>\r\n                \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from \"react\";\nimport './App.css';\n\n//Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\n\n  const [inputText,setInputText] = useState(\"\");\n  const [todos,setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos,setFilteredTodos] = useState([]);\n  \n\n  useEffect(() => {\n    filterHandler();\n    getLocalTodos();\n  },[]);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  },[todos,status]);\n\n  const filterHandler = () => {\n\n    switch(status){\n\n      case \"completed\":\n        setFilteredTodos(todos.filter(el => el.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(el => el.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    \n    }\n  };\n\n  const saveLocalTodos = () => {\n   localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(todoLocal);\n    }\n\n  }\n  \n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Vlad's Todo List</h1>\n      </header>\n      <Form onChange={filterHandler} todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} setStatus={setStatus} />\n      <TodoList todos={ todos} filteredTodos={filteredTodos} setTodos={setTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}